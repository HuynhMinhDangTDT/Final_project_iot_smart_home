"""
Django settings for smarthome_server project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


FIREBASE_CONFIG = {
    'apiKey': "AIzaSyCSTpQEqVcR-lW5DsgE5_Kqn7MrV6OZSx8",
    'authDomain': "iot-smart-home-a7c95.firebaseapp.com",
    'databaseURL': "https://iot-smart-home-a7c95-default-rtdb.asia-southeast1.firebasedatabase.app",
    'projectId': "iot-smart-home-a7c95",
    'storageBucket': "iot-smart-home-a7c95.appspot.com",
    'messagingSenderId': "327764472304",
    'appId': "1:327764472304:web:74cc73510c2b07e3686d35",
    'measurementId': "G-QSPT43DZY1"
}


# cred = credentials.Certificate("./static/iot-smart-home-a7c95-firebase-adminsdk-3ky17-9bdd30ab30.json")
# firebase_admin.initialize_app(cred)

# import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-vz1&(6(+7$if^yduelb(dy6mwaw4*)c#v_bm7_qzwnwf-1ylle'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
# ALLOWED_HOSTS = ["cc88-14-191-98-59.ngrok-free.app","127.0.0.1"]
# ALLOWED_HOSTS = ["7530-2402-9d80-3c1-98f3-f125-6b92-1a96-bfc3.ngrok-free.app"]

# CSRF_TRUSTED_ORIGINS = ['https://7530-2402-9d80-3c1-98f3-f125-6b92-1a96-bfc3.ngrok-free.app']

# Application definition

INSTALLED_APPS = [
    'django_htmx',
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'smarthome_app',
    'sslserver',
]

# MIDDLEWARE = [
#     # 'django.middleware.FirebaseAuthMiddleware',
#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

MIDDLEWARE = [
    # 'django_htmx.middleware.HtmxMiddleware'
    # 'smarthome_app.middleware.FirebaseAuthMiddleware',  # Firebase Authentication Middleware
    # 'smarthome_app.views.LoginPage.FirebaseAuthMiddleware',  # Firebase Authentication Middleware
    'django.middleware.security.SecurityMiddleware',  # Middleware bảo mật
    'django.contrib.sessions.middleware.SessionMiddleware',  # Middleware cho session
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
# SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Use database-backed sessions
# SESSION_COOKIE_NAME = 'sessionid'

# WSGI_APPLICATION = 'smarthome_server.wsgi.application'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'myauth.authentication.FirebaseAuthentication',
    ]
}

LOGIN_URL = '/login/'

# MIDDLEWARE = [
#     # Other middlewares...
#     'django.middleware.FirebaseAuthMiddleware',
# ]

ROOT_URLCONF = 'smarthome_server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'smarthome_server.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'myauth.authentication.FirebaseAuthentication',
    ]
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

MEDIA_ROOT = '../media/imgs/'

MEDIA_URL = '/imgs/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

JAZZMIN_SETTINGS = {
    "site_title": "IoT Smart Home",
    # "site_icon": None,
    "site_header": "IoT Smart Home",
    # "site_brand": "Feedback",
    # "site_logo": None,
    "welcome_sign": "IoT Smart Home",
    # "site_logo": None,
}